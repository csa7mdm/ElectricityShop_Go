version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: electricity-shop-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: electricity_shop
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - electricity-shop-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis (for future caching)
  redis:
    image: redis:7-alpine
    container_name: electricity-shop-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - electricity-shop-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  # API Application
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: electricity-shop-api
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      APP_ENV: development
      APP_PORT: 8080
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres123
      DB_NAME: electricity_shop
      DB_SSLMODE: disable
      LOG_LEVEL: info
      REDIS_HOST: redis
      REDIS_PORT: 6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - electricity-shop-network
    volumes:
      - ./uploads:/root/uploads
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Adminer (Database Management UI)
  adminer:
    image: adminer:latest
    container_name: electricity-shop-adminer
    restart: unless-stopped
    ports:
      - "8081:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    depends_on:
      - postgres
    networks:
      - electricity-shop-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  electricity-shop-network:
    driver: bridge
